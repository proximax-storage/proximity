/*
 * Proximity API
 * Proximity API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.proximax.proximity.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.proximax.proximity.client.model.ContractIdDTO;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AccountInfoDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-05-13T22:46:23.640+02:00[Europe/Prague]")
public class AccountInfoDTO {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  /**
   * Gets or Sets emailValidation
   */
  @JsonAdapter(EmailValidationEnum.Adapter.class)
  public enum EmailValidationEnum {
    VALIDATED("validated"),
    
    NOT_VALIDATED("not_validated");

    private String value;

    EmailValidationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EmailValidationEnum fromValue(String value) {
      for (EmailValidationEnum b : EmailValidationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EmailValidationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EmailValidationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EmailValidationEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EmailValidationEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_EMAIL_VALIDATION = "emailValidation";
  @SerializedName(SERIALIZED_NAME_EMAIL_VALIDATION)
  private EmailValidationEnum emailValidation;

  public static final String SERIALIZED_NAME_PASSWORD_HASH = "passwordHash";
  @SerializedName(SERIALIZED_NAME_PASSWORD_HASH)
  private String passwordHash;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("active"),
    
    INACTIVE("inactive");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_CONTRACTS = "contracts";
  @SerializedName(SERIALIZED_NAME_CONTRACTS)
  private List<ContractIdDTO> contracts = null;


  public AccountInfoDTO id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * assigned account ID
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "assigned account ID")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public AccountInfoDTO email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * e-mail address for account verification
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "e-mail address for account verification")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public AccountInfoDTO emailValidation(EmailValidationEnum emailValidation) {
    
    this.emailValidation = emailValidation;
    return this;
  }

   /**
   * Get emailValidation
   * @return emailValidation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmailValidationEnum getEmailValidation() {
    return emailValidation;
  }


  public void setEmailValidation(EmailValidationEnum emailValidation) {
    this.emailValidation = emailValidation;
  }


  public AccountInfoDTO passwordHash(String passwordHash) {
    
    this.passwordHash = passwordHash;
    return this;
  }

   /**
   * password hash for authentication
   * @return passwordHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "password hash for authentication")

  public String getPasswordHash() {
    return passwordHash;
  }


  public void setPasswordHash(String passwordHash) {
    this.passwordHash = passwordHash;
  }


  public AccountInfoDTO token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * compact form of last JWT token
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "compact form of last JWT token")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public AccountInfoDTO status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public AccountInfoDTO contracts(List<ContractIdDTO> contracts) {
    
    this.contracts = contracts;
    return this;
  }

  public AccountInfoDTO addContractsItem(ContractIdDTO contractsItem) {
    if (this.contracts == null) {
      this.contracts = new ArrayList<>();
    }
    this.contracts.add(contractsItem);
    return this;
  }

   /**
   * Get contracts
   * @return contracts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ContractIdDTO> getContracts() {
    return contracts;
  }


  public void setContracts(List<ContractIdDTO> contracts) {
    this.contracts = contracts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountInfoDTO accountInfoDTO = (AccountInfoDTO) o;
    return Objects.equals(this.id, accountInfoDTO.id) &&
        Objects.equals(this.email, accountInfoDTO.email) &&
        Objects.equals(this.emailValidation, accountInfoDTO.emailValidation) &&
        Objects.equals(this.passwordHash, accountInfoDTO.passwordHash) &&
        Objects.equals(this.token, accountInfoDTO.token) &&
        Objects.equals(this.status, accountInfoDTO.status) &&
        Objects.equals(this.contracts, accountInfoDTO.contracts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, email, emailValidation, passwordHash, token, status, contracts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountInfoDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailValidation: ").append(toIndentedString(emailValidation)).append("\n");
    sb.append("    passwordHash: ").append(toIndentedString(passwordHash)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    contracts: ").append(toIndentedString(contracts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

