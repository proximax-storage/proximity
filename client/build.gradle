/*
 * Copyright 2020 ProximaX
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 plugins {
    // main language plugin
    id 'java-library'
    // code coverage reporting
    id 'jacoco'
    // integrate coverage with github
    id 'com.github.kt3k.coveralls' version '2.8.4'
    // generator for the web services
    id "org.openapi.generator" version "4.2.2"
}

// Java8
sourceCompatibility = 1.8

// add generated code to the man sources et
sourceSets {
    main {
    	java {
    		srcDirs += [ 'src/gen/java' ]
    	}
    }
}

// take dependencies from maven central
repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    mavenCentral()
    jcenter()
}

// Make all tests use JUnit 5
tasks.withType(Test) {
    useJUnitPlatform()
}

// versions of dependencies
ext {
    junitVersion = '5.6.0'
    rootPackage = 'io.proximax.proximity.client'
    jerseyVersion = '2.30.1'
    okHttp3Version = '4.4.1'
}

openApiGenerate {
    generatorName = "java"
    inputSpec = "$rootDir/schemas/proximity_api.yaml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "${rootPackage}.api"
    invokerPackage = "${rootPackage}.invoker"
    modelPackage = "${rootPackage}.model"
    generateAliasAsModel = true
    validateSpec = false
    skipValidateSpec = true
    configOptions = [
        dateLibrary: "java8"
    ]
}

dependencies {
    // JWT for request authentication
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    
	// logging facade
	implementation 'org.slf4j:slf4j-api:1.7.30'
	// logging implementation
	runtime 'ch.qos.logback:logback-classic:1.2.3'

    implementation 'io.swagger:swagger-annotations:1.5.22'
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation 'com.squareup.okhttp3:okhttp:3.14.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.2'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'io.gsonfire:gson-fire:1.8.3'

    // validations
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'commons-io:commons-io:2.6'
	implementation 'commons-codec:commons-codec:1.13'

	// mockito for mocking
    testImplementation 'org.mockito:mockito-all:1.9.5'
    // logging facade and impl
    // tests
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.6.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    
    testImplementation "com.squareup.okhttp3:okhttp:${okHttp3Version}"
    testImplementation 'com.google.code.gson:gson:2.8.5'
}

